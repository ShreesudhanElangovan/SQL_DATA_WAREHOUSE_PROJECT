-- =====================================================================
-- Script: Create Gold Layer Views
-- Database: sales_performance
-- Layer: Gold
-- Purpose: Define analytics-ready views (Star Schema) combining and transforming data 
--          from the Silver Layer into clean, enriched, and business-friendly datasets.
-- =====================================================================

-- ---------------------------------------------------------------------
-- üìú Script Purpose:
-- This script creates **views** for the Gold Layer within the `sales_performance` 
-- Data Warehouse. The Gold Layer represents the **final dimension and fact tables**
-- following a **Star Schema** design.
--
-- Each view performs data transformations, joins, and enrichments from the Silver Layer 
-- to produce a **clean, consolidated, and analytics-ready dataset**.
--
-- üí° Usage:
-- These views can be queried directly by BI tools, dashboards, and analysts 
-- for advanced **reporting, trend analysis, and KPI measurement**.
--
-- ‚ö†Ô∏è Note:
-- Running this script will overwrite existing Gold Layer views if they already exist.
-- Ensure dependent analytical reports are validated after refreshing these views.
-- ---------------------------------------------------------------------


-- ==============================================================
-- üßç‚Äç‚ôÇÔ∏è Dimension: gold.dim_customer
-- ==============================================================
CREATE OR REPLACE VIEW gold.dim_customer AS
SELECT
    ROW_NUMBER() OVER (ORDER BY ci.cst_id) AS customer_key,
    ci.cst_id AS customer_id,
    ci.cst_key AS customer_number,
    ci.cst_firstname AS first_name,
    ci.cst_lastname AS last_name,
    lo.cntry AS country,
    ci.cst_material_status AS marital_status,
    CASE 
        WHEN ci.cst_gndr != 'n/a' THEN ci.cst_gndr
        ELSE COALESCE(ca.gen, 'n/a')
    END AS gender,
    ca.bdate AS birthdate,
    ci.cst_create_date AS create_date
FROM sales_performance.silver_crm_cust_info ci
LEFT JOIN sales_performance.silver_erp_cust_az12 ca
    ON ci.cst_key = ca.cid
LEFT JOIN sales_performance.silver_erp_loc_a101 lo
    ON ci.cst_key = lo.cid;


-- ==============================================================
-- üì¶ Dimension: gold.dim_product
-- ==============================================================
CREATE OR REPLACE VIEW gold.dim_product AS
SELECT 
    ROW_NUMBER() OVER (ORDER BY pi.prd_start_dt, pi.prd_key) AS product_key,
    pi.prd_id AS product_id,
    pi.prd_key AS product_number,
    pi.prd_nm AS product_name,
    pi.cat_id AS category_id,
    pc.cat AS category,
    pc.subcat AS subcategory,
    pc.maintenance,
    pi.prd_cost AS cost,
    pi.prd_line AS product_line,
    pi.prd_start_dt AS start_date
FROM sales_performance.silver_crm_prd_info pi
LEFT JOIN sales_performance.silver_erp_px_cat_g1v2 pc
    ON pi.cat_id = pc.id
WHERE pi.prd_end_dt IS NULL;


-- ==============================================================
-- üí∞ Fact Table: gold.fact_sales
-- ==============================================================
CREATE OR REPLACE VIEW gold.fact_sales AS
SELECT 
    s.sls_ord_num AS order_number,
    pr.product_key,
    ci.customer_key,
    s.sls_order_dt AS order_date,
    s.sls_ship_dt AS shipping_date,
    s.sls_due_dt AS due_date,
    s.sls_sales AS sales_amount,
    s.sls_quantity AS quantity,
    s.sls_price AS price
FROM sales_performance.silver_crm_sales_info s
LEFT JOIN gold.dim_product pr
    ON s.sls_prd_key = pr.product_number
LEFT JOIN gold.dim_customer ci
    ON s.sls_cust_id = ci.customer_id;

-- =====================================================================
-- ‚úÖ End of Script
-- =====================================================================
